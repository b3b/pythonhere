on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v2"

      - name: Get the version
        id: version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Update version from tag
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
        run: |
          echo "Version is: ${VERSION}"
          test -n "${VERSION}"
          echo "__version__ = \"${VERSION}\"" > pythonhere/version_here.py

      - name: Set up Python
        uses: "actions/setup-python@v2"
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel twine
      - name: Build package
        run: python setup.py sdist bdist_wheel
      - name: List result
        run: ls -l dist
      - name: Check distribution
        run: python -m twine check dist/*

      - name: Build Android APK with Buildozer
        id: buildozer
        uses: ArtemSBulgakov/buildozer-action@v1
        with:
          command: buildozer android debug
          repository_root: .
          workdir: .
          buildozer_version: stable

      - name: List APK building result
        run: sudo ls -l "${{ steps.buildozer.outputs.filename }}"

      - name: Show APK checksum
        run: sha256sum "${{ steps.buildozer.outputs.filename }}"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ steps.version.outputs.VERSION }}"
          release_name: "Release ${{ steps.version.outputs.VERSION }}"

      - name: Upload APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "${{ steps.buildozer.outputs.filename }}"
          asset_name: "pythonhere-debug-${{ steps.version.outputs.VERSION }}.apk"
          asset_content_type: application/vnd.android.package-archive

      - name: Upload package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload dist/*
